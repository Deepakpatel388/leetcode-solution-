/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
 ListNode head = null;
        ListNode tail = null;
        int cry = 0;
        
        while(l1 != null && l2 != null){
            
            int sum = l1.val +l2.val + cry;
            
            if(head == null){
            head  = new ListNode(sum % 10);
            tail = head;
            cry = sum/10;
            }
            else{
               tail.next = new ListNode(sum % 10);
               cry = sum/10;
               tail = tail.next;
            }
            
            l1 = l1.next;
            l2 = l2.next;
            
        
            
        }
        while(l1 != null){
            
            int sum = l1.val + cry;
            tail.next = new ListNode(sum % 10);
            cry = sum/10;
            
            l1 = l1.next;
            tail = tail.next;
            
            
        }
        while(l2 != null){
            
            int sum = l2.val + cry;
            tail.next = new ListNode(sum % 10);
            cry = sum/10;
            
            l2 = l2.next;
            tail = tail.next;
        
            
        }
        
        if(l1 == null && l2 == null && cry == 1){
            tail.next = new ListNode(cry);
        }
            
            
        
        return head;
        
    }
}
